{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/AddPersonForm.js","services/Persondata.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","handle","onChange","Person","person","name","number","class","onClick","id","Persons","persons","map","AddPersonForm","prop","onSubmit","add","value1","handlep","value2","handlen","className","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","text","App","useState","setPersons","newName","setNewName","newNum","setNewNum","filter","setFilter","setMessage","useEffect","ps","checkPerson","find","toLowerCase","showperson","includes","event","target","preventDefault","personObject","window","confirm","updatedperson","p","concat","setTimeout","catch","error","returnedperson","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4763fcb7.chunk.js","sourcesContent":["import React from 'react'\r\nconst Filter = ({value,handle}) =>{\r\n    return(\r\n      <div>\r\n          Enter Name To Filter: <input onChange={handle}   value={value} />\r\n      </div>\r\n       \r\n    )\r\n}\r\nexport default Filter","import React from 'react'\r\nconst Person =({person,handle}) =>{\r\n    return(\r\n      <p>{person.name} &nbsp; {person.number} &nbsp; &nbsp;<button class=\"btn\" onClick={()=>handle(person.id,person.name)}>Delete</button></p>\r\n    )\r\n}\r\nexport default Person","import React from 'react'\r\nimport Person from \"./Person\"\r\nconst Persons= ({persons,handle}) =>{\r\n    return(\r\n        <ul>\r\n        {persons.map(person => \r\n          <Person key={person.id} person={person} handle={handle}/>\r\n        )}\r\n     </ul>\r\n    \r\n     \r\n    )\r\n}\r\nexport default Persons","import React from 'react'\r\nconst AddPersonForm =(prop) =>{\r\n    return(\r\n      <div>\r\n      <form onSubmit={prop.add}>\r\n        <div>\r\n          Name: <input value={prop.value1}\r\n           onChange={prop.handlep}/>\r\n        </div><br></br>\r\n        <div>\r\n          Number:<input value={prop.value2}\r\n            onChange={prop.handlen}/>\r\n        </div><br></br>\r\n        <div>\r\n          <button className=\"btn\" type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    )\r\n}\r\nexport default AddPersonForm","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\nconst remove = (id) => {\r\n    axios.delete(`${baseUrl}/${id}`);\r\n}\r\n  \r\nexport default { \r\n  getAll,create,update,remove \r\n}","import React from 'react'\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={message.type}>\r\n        {message.text}\r\n      </div>\r\n    )\r\n}\r\nexport default Notification","import React, { useState,useEffect } from 'react'\nimport Filter from \"./components/Filter\"\nimport Persons from \"./components/Persons\"\nimport AddPersonForm from \"./components/AddPersonForm\"\nimport ps from \"./services/Persondata\"\nimport Notification from './components/Notification'\nconst App = () => {\n  \n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNum,setNewNum] =useState('')\n  const [filter,setFilter]=useState('')\n  const [message, setMessage] = useState(null)\n\n  //\n  useEffect(() => {\n    ps\n     .getAll()\n      .then(data => {\n        setPersons(data)\n      })\n  }, [])\n   //to check whether person exists or not\n  const checkPerson = persons.find(person => \n    person.name.toLowerCase() === newName.toLowerCase())\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number:newNum\n    }\n    if(checkPerson)\n    {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with the new one?`))\n      {\n        const updatedperson={...checkPerson,number:newNum}\n        ps.update(checkPerson.id,updatedperson)\n        .then(person => {\n          setPersons(persons.filter((p) => p.name !== person.name)\n          .concat(person))\n          setMessage({text:`${person.name} has  updated`,type:\"success\"})\n          setTimeout(() => setMessage(null), 5000);\n        })\n        .catch((error) => {\n          setPersons(persons.filter((p) => p.name !== checkPerson.name));\n          setMessage({text: `${checkPerson.name} has already been deleted from the server`,type: \"error\",});\n          setTimeout(() => setMessage(null), 5000);\n        });\n      }   \n      return ; \n    }\n    else{\n      ps.create(personObject)\n      .then(returnedperson => {\n        setPersons(persons.concat(returnedperson))\n        setNewName('') \n        setNewNum('')\n        setMessage({text:`${returnedperson.name} Added Successfully`,type:\"success\" })\n        setTimeout(() => setMessage(null), 5000);\n      })\n      .catch((error) => {\n        setMessage({ text: error.response.data.error, type: \"error\" });\n        setTimeout(() => setMessage(null), 5000);\n        console.error(error);\n      });\n    }\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange =(event) =>{\n    setNewNum(event.target.value)\n  }\n  const handleFilter=(event) =>{\n    setFilter(event.target.value)\n  }\n  const personDelete =(id,name) => {\n      if(window.confirm(`Are You Sure To Delete ${name}`))\n      {\n          ps.remove(id);\n          setPersons(persons.filter( person => person.id !== id));\n          setMessage({text:`${name} deleted successfully`,type:\"success\"});\n          setTimeout(() => setMessage(null), 5000);\n      }\n  }\n  const showperson = filter === \"\" ? persons:persons.filter(person =>\n    person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    \n  return (\n    <div>\n      <Notification message={message}/>\n      <h2>Phonebook</h2>\n      <Filter value={filter} handle={handleFilter}/>\n      <h3>Add Person</h3>\n      <AddPersonForm value1={newName} value2={newNum} handlep={handlePersonChange} handlen={handleNumberChange} add={addPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={showperson}handle={personDelete} />\n    </div>\n  )\n}\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}